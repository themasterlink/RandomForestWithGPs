{
	"RFGP": {
        "thresholdForNoise": 5,
        "pointsPerClassForBayOpt": 7,
        "maxPointsUsedInGpSingleTraining": 1500,
        "maxNrOfPointsForBayesOpt": 250,
        "nrOfNoChanges": 6
    },    
    "MultiBinaryGP": {
        "lowerBoundNoise": 0.5,
        "upperBoundNoise": 5.0,
        "lowerBoundLength": 1.0,
        "upperBoundLength": 20.0,
    	"trainingAmount": 400,
    	"testingAmount": 200
    },
    "Forest": {
        "amountOfTrees": 200,
        "Trees": {
            "height": 10
        }
    },
    "IVM": {
        "doEpUpdate": "false",
        "lambda": 0.5,
        "nrOfInducingPoints": 8,
        "desiredFraction": 0.45,
        "hasLengthMoreThanParam" : "false",
        "Training": {
        	"useSavedHyperParams": "true",
        	"overwriteExistingHyperParams": "false"
        }
    },
    "TotalStorage": {
        "folderLocReal": "..\/realTest\/",
        "folderLocFake": "..\/fakeData\/"
    },
    "OnlineRandomForest": {
		"amountOfPointsUntilRetrain": 300,
		"minUsedDataFactor":  0.2,
		"maxUsedDataFactor":  0.8,
		"factorAmountOfUsedDims": 1.0
	},
    "Kernel": {
        "path": "..\/realTest\/kernelData.kernel"
    },
    "Training": {
        "path": "..\/fakeData\/",
        "amount": 200,
        "dim": 2
    },
    "RealData": {
        "folderPath": "..\/realTest\/"
    },
    "Test": {
        "path": "..\/testData\/testInput3.txt",
        "amount": 1000
    },
    "WriteBinarySaveOfTrees": {
    	"doWriting": "true",
        "path": "..\/testData\/trees.binary"
    },
    "Write2D": {
        "testPath": "..\/testData\/visuTestResult.txt",
        "gridPath": "..\/testData\/visuGridResult.txt",
        "doWriting": "true",
        "printX": 0,
        "printY": 1
    },
    "MinMaxUsedData": {
    	"useFixedValuesForMinMaxUsedData": "false", 
    	"minValue": 100,
    	"maxValue": 300,
    	"minValueFraction": 0.2,
    	"maxValueFraction": 0.6
    },
    "OnlyGp": {
    	"useGP": "true"
    }
}
